name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  gitleaks:
    name: Run Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Repo'yu Checkout Et
        uses: actions/checkout@v4

      - name: Gitleaks ile Secret Taraması (SARIF çıktısı)
        run: |
          mkdir -p reports
          docker run --rm -v ${{ github.workspace }}:/path zricethezav/gitleaks:latest \
            detect --source /path --report-format sarif --report-path /path/reports/gitleaks.sarif

      - name: Raporu Artifact olarak sakla
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: reports/gitleaks.sarif

  dependency-check:
    name: Node.js Dependency Check
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
      - name: Repo'yu Checkout Et
        uses: actions/checkout@v4

      - name: Node.js Kur
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bağımlılıkları Yükle
        run: npm install

      - name: Dependency Check (npm audit JSON raporu)
        run: |
          mkdir -p reports
          npm audit --json > reports/dependency-check.json

      - name: Kritik açık kontrolü
        run: |
          CRITICAL=$(jq '[.vulnerabilities[] | select(.severity=="critical")] | length' reports/dependency-check.json)
          HIGH=$(jq '[.vulnerabilities[] | select(.severity=="high")] | length' reports/dependency-check.json)

          echo "Critical bulunan: $CRITICAL"
          echo "High bulunan: $HIGH"

          if [ "$CRITICAL" -gt 0 ] || [ "$HIGH" -gt 0 ]; then
            echo "❌ Kritik/High güvenlik açığı bulundu. Pipeline sonlandırılıyor."
            exit 1
          else
            echo "✅ Kritik/High güvenlik açığı bulunamadı."
          fi

      - name: Raporu Artifact olarak sakla
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/dependency-check.json

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: [gitleaks, dependency-check]
    steps:
      - name: Repo'yu Checkout Et
        uses: actions/checkout@v4

      - name: Node.js Kur
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Bağımlılıkları Yükle
        run: npm install

      - name: Testleri Çalıştır
        run: npm test
